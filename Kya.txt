make app named blog
open views.py inside the app
write a function for http response after getting request
make url pattern for the home page in urls.py inside the app by importing view.py from parent directory
url pattern chops off part of url entered for eg: if we enter blog/about then project urls.py will only send /about to the app urls.py
add url pattern of blog.urls --> app path('blog/', include('blog.urls') inside the project urls.py(not app/urls.py)
django checks in project urls and looks for the requested route then goes to the pattern which matches(here its urls.py in the app)
blank route so it matches to the pattern which leads to the httpresponse in the views file
make directory blog-->templates-->blog
need to add blog app in installed app so django can check for templates
add app config(located in apps.py inside app dir) to projects setting.py
we add the blogconfig class to the installed apps
render(request,'app/template.html') replaces httpresponse in views.py 
django allows coding within templates
can make a third template and use inheritance to reduce code and keep just the part which unique to both templates
using tailwind css rn 
in databases using sqlite we create databases as classes which have attributes(columns)
for eg class student will have properties like rollno,height,weight etc student is one database
django.db.models per dekho sab
python manage.py makemigrations,migrate runs sql commands which will create the databases we just wrote the code for
databases --> dennis ivy
read django.views, object_list and shit used
